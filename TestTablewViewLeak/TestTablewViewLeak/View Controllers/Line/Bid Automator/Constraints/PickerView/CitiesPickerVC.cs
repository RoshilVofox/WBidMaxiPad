// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using WBid.WBidiPad.iOS.Utility;
using WBid.WBidiPad.Core;
using WBid.WBidiPad.Core.Enum;

namespace WBid.WBidiPad.iOS
{
	public partial class CitiesPickerVC : UIViewController
	{
		public delegate void ItemSelectedEventHandler(string value);
		public event ItemSelectedEventHandler PickedItem;
		LoadingOverlay loadingOverlay;
		BidAutoCalculateCommuteTimes bidAutoCalculateCommuteTimes;
		//public enum CommuteFromView
		//{
		//	BidAutomator,
		//	CSWConstraints,
		//	CSWWeight,
		//	CSWCommutabilityConstraints,
		//	CSWCommutabilityWeights,
  //          CSWCommutabilitySort,
  //          CSWCommutableAutoSort,
  //          CSWCommutableManualSort,
		//};
		public CommuteFromView ObjFromView;
		public bool isNonStop=false;
		public int connectTime = 0;
		public CitiesPickerVC (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			Title = "Cities";
			this.View.BackgroundColor = UIColor.White;
			collectionView.RegisterNibForCell (CitiesPickerCell.Nib, CitiesPickerCell.Key);
			collectionView.Source = new CitiesPickerSource (this);
		}
		// fire the event
		public void ItemSelected(string value)
		{
			if (PickedItem!= null && value!="Select") {
				


				loadingOverlay = new LoadingOverlay(new CoreGraphics.CGRect(View.Bounds.X,44,View.Bounds.Width,View.Bounds.Height), "Loading...");
				View.Add(loadingOverlay);

				InvokeInBackground(() =>
					{

						bidAutoCalculateCommuteTimes = new BidAutoCalculateCommuteTimes();
						bidAutoCalculateCommuteTimes.ObjFromView=(CommuteFromView)ObjFromView;
						bidAutoCalculateCommuteTimes.CalculateDailyCommutableTimes(value,isNonStop, connectTime);

						InvokeOnMainThread(()=>{

							if (bidAutoCalculateCommuteTimes == null) return;
	
							if (bidAutoCalculateCommuteTimes.ErrorMessage != string.Empty)
							{
								DisplayAlertView("WBidMax", bidAutoCalculateCommuteTimes.ErrorMessage);
							}

							loadingOverlay.Hide();
							PickedItem(value);
						});
					});





			}
		}
		private void DisplayAlertView(string caption, string message)
		{
			loadingOverlay.Hide();

            UIWindow WindowAlert = new UIWindow(UIScreen.MainScreen.Bounds);
            WindowAlert.RootViewController = new UIViewController();
            UIAlertController okAlertController = UIAlertController.Create(caption, message, UIAlertControllerStyle.Alert);
            okAlertController.AddAction(UIAlertAction.Create("OK", UIAlertActionStyle.Default, (actionOK) => { WindowAlert.Dispose(); }));
			WindowAlert.MakeKeyAndVisible();
            WindowAlert.RootViewController.PresentViewController(okAlertController, true, null);
            //WindowAlert.Dispose();


        }

		partial void funCancelButtonClicked(NSObject sender)
		{
			bidAutoCalculateCommuteTimes = null;
			this.DismissViewController(true, null);
		}
	}
}
